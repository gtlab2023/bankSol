/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { BankSol, BankSolInterface } from "../BankSol";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
    ],
    name: "InterestCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
    payable: true,
  },
  {
    inputs: [],
    name: "ANNUAL_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "MAX_WITHDRAWAL_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "SECONDS_PER_YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastInterestCalculation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    stateMutability: "payable",
    type: "receive",
    payable: true,
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b506107d48061001c5f395ff3fe608060405260043610610094575f3560e01c8063d3d3819311610058578063d3d38193146101a1578063e11932cf146101c0578063e6a69ab8146101df578063fa3c3092146101f6578063fc7e286d1461020a576100e6565b80632e1a7d4d1461012e5780636f9fb98a1461014f578063853828b614610170578063b678339314610184578063d0e30db014610199576100e6565b366100e65760405162461bcd60e51b815260206004820152601c60248201527f557365206465706f736974282920746f206465706f736974204554480000000060448201526064015b60405180910390fd5b60405162461bcd60e51b815260206004820152601760248201527f46756e6374696f6e20646f6573206e6f7420657869737400000000000000000060448201526064016100dd565b348015610139575f80fd5b5061014d6101483660046106ea565b61025f565b005b34801561015a575f80fd5b50475b6040519081526020015b60405180910390f35b34801561017b575f80fd5b5061014d610479565b34801561018f575f80fd5b5061015d6101f481565b61014d6104cf565b3480156101ac575f80fd5b5061015d6101bb366004610701565b6105f7565b3480156101cb575f80fd5b5061015d6101da366004610701565b610629565b3480156101ea575f80fd5b5061015d6301e1338081565b348015610201575f80fd5b5061015d603281565b348015610215575f80fd5b50610244610224366004610701565b5f6020819052908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610167565b335f90815260208190526040902080548211156102b55760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016100dd565b5f82116103155760405162461bcd60e51b815260206004820152602860248201527f5769746864726177616c20616d6f756e74206d75737420626520677265617465604482015267072207468616e20360c41b60648201526084016100dd565b5f61031f33610629565b90505f81835f01546103319190610742565b90505f6064610341603284610755565b61034b919061076c565b90508085111561039d5760405162461bcd60e51b815260206004820181905260248201527f45786365656473206d6178696d756d207769746864726177616c206c696d697460448201526064016100dd565b6103a7858361078b565b84554260028501556040515f90339087908381818185875af1925050503d805f81146103ee576040519150601f19603f3d011682016040523d82523d5f602084013e6103f3565b606091505b50509050806104365760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016100dd565b604080518781526020810186905233917fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb910160405180910390a2505050505050565b60405162461bcd60e51b815260206004820152602560248201527f46756e6374696f6e2064697361626c656420746f2070726576656e742062616e6044820152643590393ab760d91b60648201526084016100dd565b5f341161052c5760405162461bcd60e51b815260206004820152602560248201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084016100dd565b335f90815260208190526040902080541561059b575f61054b33610629565b905080825f015f82825461055f9190610742565b909155505060405181815233907f3aff28a570e0ff120bf92f84de651faa874ba2dd7268ad0fc5a68107492729799060200160405180910390a2505b34815f015f8282546105ad9190610742565b90915550504260018201819055600282015560405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a250565b5f61060182610629565b6001600160a01b0383165f908152602081905260409020546106239190610742565b92915050565b6001600160a01b0381165f9081526020819052604081208054820361065057505f92915050565b80600201544210156106985760405162461bcd60e51b81526020600482015260116024820152700496e76616c69642074696d657374616d7607c1b60448201526064016100dd565b5f8160020154426106a9919061078b565b90505f6106bc6301e13380612710610755565b835483906106cd906101f490610755565b6106d79190610755565b6106e1919061076c565b95945050505050565b5f602082840312156106fa575f80fd5b5035919050565b5f60208284031215610711575f80fd5b81356001600160a01b0381168114610727575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106235761062361072e565b80820281158282048414176106235761062361072e565b5f8261078657634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156106235761062361072e56fea264697066735822122022d07599b9fa8c3ecd97350e8cff5b46ec49300c2242eb7a04a0349afa3eefcd64736f6c634300081a0033";

type BankSolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BankSolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BankSol__factory extends ContractFactory {
  constructor(...args: BankSolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BankSol & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BankSol__factory {
    return super.connect(runner) as BankSol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankSolInterface {
    return new Interface(_abi) as BankSolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BankSol {
    return new Contract(address, _abi, runner) as unknown as BankSol;
  }
}
